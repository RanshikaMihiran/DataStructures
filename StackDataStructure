package Stack;

public class StackX {
	
	
	private int maxsize;
	private int top;
	private double stackarry[];
	
	
	//stackX Constructor
	public StackX(int s) {
		
		maxsize =s;
		top=-1;
		stackarry  =new double[maxsize];
		
	}
	
	//push Method
	public void push(double j) {
		if(maxsize==top-1) {
			System.out.println("Array is Full");
		}else {
			top++;
			stackarry[top]=j;
			//stackarry [++top] = j;
			
		}
	}
	
	//Pop Method
	public double pop() {
		if(top==-1) {
			System.out.println("Array is Eempty");
			return -99;
		}else {
			double x = stackarry[top];
			top--;
			return x; 
			//return stackarry[top--];
		}
	}
	
	
	//peek Method
	public double peek() {
		if(top==-1) {
			System.out.println("Array is Eempty");
			return -99;
		}else {
			return stackarry[top];
		}
	}
	
	
	//isEmpty Method
	public boolean isEmpty() {
		return(top==-1);
	}
	
	//isFull Method
	public boolean isFull() {
		return(top==maxsize-1);
	}

	//count
	public int getConut() {
		return(top+1);
	}
	
	

}



//Main Class

package Stack;

public class Main {

	public static void main(String[] args) {
		
	    double val;
		
		StackX mystack = new StackX(10);
		mystack.push(10);
		mystack.push(20);
		mystack.push(30);
		mystack.push(40);
		val= mystack.pop();
		mystack.peek();
		
		System.out.println(val);
		
		System.out.println();
		
		//delete all items and prrint
		while(!mystack.isEmpty()) {
			System.out.println(mystack.pop());
		}
		
	}

}
